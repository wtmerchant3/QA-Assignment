<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="6" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-15T01:35:29 EDT" name="Default suite" finished-at="2021-10-15T01:38:02 EDT" duration-ms="152775">
    <groups>
    </groups>
    <test started-at="2021-10-15T01:35:29 EDT" name="Default test" finished-at="2021-10-15T01:38:02 EDT" duration-ms="152775">
      <class name="tests.TicTacToeTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:29 EDT" name="openBrowser" finished-at="2021-10-15T01:35:34 EDT" duration-ms="4529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyGameCanEndInADraw()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:34 EDT" name="verifyGameCanEndInADraw" finished-at="2021-10-15T01:35:40 EDT" duration-ms="6044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGameCanEndInADraw -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:40 EDT" name="closeBrowser" finished-at="2021-10-15T01:35:41 EDT" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:41 EDT" name="openBrowser" finished-at="2021-10-15T01:35:47 EDT" duration-ms="5490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyGameCanEndWithAWinner()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:47 EDT" name="verifyGameCanEndWithAWinner" finished-at="2021-10-15T01:35:52 EDT" duration-ms="5290" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assert that game ends with a winner and correct winner is displayed on banner expected [Congratulations player X! You've won. Refresh to play again!] but found [Congratulations player O! You've won. Refresh to play again!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assert that game ends with a winner and correct winner is displayed on banner expected [Congratulations player X! You've won. Refresh to play again!] but found [Congratulations player O! You've won. Refresh to play again!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.TicTacToeTest.verifyGameCanEndWithAWinner(TicTacToeTest.java:195)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGameCanEndWithAWinner -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:52 EDT" name="closeBrowser" finished-at="2021-10-15T01:35:53 EDT" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:35:53 EDT" name="openBrowser" finished-at="2021-10-15T01:36:42 EDT" duration-ms="49010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyNewTableNotGeneratedIfGameAlreadyStarted()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:42 EDT" name="verifyNewTableNotGeneratedIfGameAlreadyStarted" finished-at="2021-10-15T01:36:42 EDT" duration-ms="29" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//form/input[@id='number']"}
  (Session info: chrome=94.0.4606.81)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'macbooks-MBP.lan1', ip: '2603:6080:2740:95c:0:0:0:313%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/1z/jyf7n0v948n...}, goog:chromeOptions: {debuggerAddress: localhost:58682}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d9f04f7cab9b0c30951026c00300da16
*** Element info: {Using=xpath, value=//form/input[@id='number']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//form/input[@id='number']"}
  (Session info: chrome=94.0.4606.81)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'macbooks-MBP.lan1', ip: '2603:6080:2740:95c:0:0:0:313%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /var/folders/1z/jyf7n0v948n...}, goog:chromeOptions: {debuggerAddress: localhost:58682}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d9f04f7cab9b0c30951026c00300da16
*** Element info: {Using=xpath, value=//form/input[@id='number']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at tests.TicTacToeTest.verifyNewTableNotGeneratedIfGameAlreadyStarted(TicTacToeTest.java:121)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewTableNotGeneratedIfGameAlreadyStarted -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:42 EDT" name="closeBrowser" finished-at="2021-10-15T01:36:43 EDT" duration-ms="1087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:43 EDT" name="openBrowser" finished-at="2021-10-15T01:36:47 EDT" duration-ms="4034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyPlayerCantClickAlreadySelectedSquareDuringUnfinishedGame()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:47 EDT" name="verifyPlayerCantClickAlreadySelectedSquareDuringUnfinishedGame" finished-at="2021-10-15T01:36:52 EDT" duration-ms="5313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPlayerCantClickAlreadySelectedSquareDuringUnfinishedGame -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:52 EDT" name="closeBrowser" finished-at="2021-10-15T01:36:54 EDT" duration-ms="1087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:54 EDT" name="openBrowser" finished-at="2021-10-15T01:36:57 EDT" duration-ms="3607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyPlayerOCanWinGame()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:36:57 EDT" name="verifyPlayerOCanWinGame" finished-at="2021-10-15T01:37:03 EDT" duration-ms="5638" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assert that Player O can win the game and that the endgame banner declares them as the winner. expected [Congratulations player O! You've won. Refresh to play again!] but found [Congratulations player X! You've won. Refresh to play again!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assert that Player O can win the game and that the endgame banner declares them as the winner. expected [Congratulations player O! You've won. Refresh to play again!] but found [Congratulations player X! You've won. Refresh to play again!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.TicTacToeTest.verifyPlayerOCanWinGame(TicTacToeTest.java:391)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPlayerOCanWinGame -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:03 EDT" name="closeBrowser" finished-at="2021-10-15T01:37:04 EDT" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:04 EDT" name="openBrowser" finished-at="2021-10-15T01:37:08 EDT" duration-ms="4000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySpacesCannotBeClickedAfterGameEndsInDraw()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:08 EDT" name="verifySpacesCannotBeClickedAfterGameEndsInDraw" finished-at="2021-10-15T01:37:14 EDT" duration-ms="6020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpacesCannotBeClickedAfterGameEndsInDraw -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:14 EDT" name="closeBrowser" finished-at="2021-10-15T01:37:15 EDT" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:15 EDT" name="openBrowser" finished-at="2021-10-15T01:37:19 EDT" duration-ms="4432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySpacesCannotBeClickedAfterGameEndsInWinWithRemainingEmptySpaces()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:19 EDT" name="verifySpacesCannotBeClickedAfterGameEndsInWinWithRemainingEmptySpaces" finished-at="2021-10-15T01:37:30 EDT" duration-ms="10641" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assert that clicking an empty space after a game has ended in a win with empty spaces remaining does not fill the space. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assert that clicking an empty space after a game has ended in a win with empty spaces remaining does not fill the space. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at tests.TicTacToeTest.verifySpacesCannotBeClickedAfterGameEndsInWinWithRemainingEmptySpaces(TicTacToeTest.java:296)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpacesCannotBeClickedAfterGameEndsInWinWithRemainingEmptySpaces -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:30 EDT" name="closeBrowser" finished-at="2021-10-15T01:37:31 EDT" duration-ms="1093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:31 EDT" name="openBrowser" finished-at="2021-10-15T01:37:35 EDT" duration-ms="3839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableGeneratedWithCorrectInput()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:35 EDT" name="verifyTableGeneratedWithCorrectInput" finished-at="2021-10-15T01:37:40 EDT" duration-ms="5227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableGeneratedWithCorrectInput -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:40 EDT" name="closeBrowser" finished-at="2021-10-15T01:37:41 EDT" duration-ms="1088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:41 EDT" name="openBrowser" finished-at="2021-10-15T01:37:46 EDT" duration-ms="4285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableNotGeneratedWithInputValueLessThanEqualToZero()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:46 EDT" name="verifyTableNotGeneratedWithInputValueLessThanEqualToZero" finished-at="2021-10-15T01:37:51 EDT" duration-ms="5191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableNotGeneratedWithInputValueLessThanEqualToZero -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:51 EDT" name="closeBrowser" finished-at="2021-10-15T01:37:52 EDT" duration-ms="1086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:52 EDT" name="openBrowser" finished-at="2021-10-15T01:37:56 EDT" duration-ms="4023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableNotGeneratedWithNonNumericInputValue()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:37:56 EDT" name="verifyTableNotGeneratedWithNonNumericInputValue" finished-at="2021-10-15T01:38:01 EDT" duration-ms="5189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableNotGeneratedWithNonNumericInputValue -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@8909f18]" started-at="2021-10-15T01:38:01 EDT" name="closeBrowser" finished-at="2021-10-15T01:38:02 EDT" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.TicTacToeTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
