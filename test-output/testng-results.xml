<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-14T23:32:09 EDT" name="Default suite" finished-at="2021-10-14T23:32:41 EDT" duration-ms="31965">
    <groups>
    </groups>
    <test started-at="2021-10-14T23:32:09 EDT" name="Default test" finished-at="2021-10-14T23:32:41 EDT" duration-ms="31965">
      <class name="tests.TicTacToeTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:09 EDT" name="openBrowser" finished-at="2021-10-14T23:32:13 EDT" duration-ms="4385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyGameCanEndWithAWinner()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:13 EDT" name="verifyGameCanEndWithAWinner" finished-at="2021-10-14T23:32:14 EDT" duration-ms="457" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assert that game ends with a winner and correct winner is displayed on banner expected [Congratulations player X! You've won. Refresh to play again!] but found [Congratulations player O! You've won. Refresh to play again!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assert that game ends with a winner and correct winner is displayed on banner expected [Congratulations player X! You've won. Refresh to play again!] but found [Congratulations player O! You've won. Refresh to play again!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at tests.TicTacToeTest.verifyGameCanEndWithAWinner(TicTacToeTest.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGameCanEndWithAWinner -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:14 EDT" name="closeBrowser" finished-at="2021-10-14T23:32:16 EDT" duration-ms="2105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:16 EDT" name="openBrowser" finished-at="2021-10-14T23:32:20 EDT" duration-ms="3872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyNewTableNotGeneratedIfGameAlreadyStarted()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:20 EDT" name="verifyNewTableNotGeneratedIfGameAlreadyStarted" finished-at="2021-10-14T23:32:20 EDT" duration-ms="278" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assert that another table is not generated if a game is already in session. expected [1] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assert that another table is not generated if a game is already in session. expected [1] but found [2]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at tests.TicTacToeTest.verifyNewTableNotGeneratedIfGameAlreadyStarted(TicTacToeTest.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewTableNotGeneratedIfGameAlreadyStarted -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:20 EDT" name="closeBrowser" finished-at="2021-10-14T23:32:22 EDT" duration-ms="2099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:22 EDT" name="openBrowser" finished-at="2021-10-14T23:32:26 EDT" duration-ms="3768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableGeneratedWithCorrectInput()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:26 EDT" name="verifyTableGeneratedWithCorrectInput" finished-at="2021-10-14T23:32:26 EDT" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableGeneratedWithCorrectInput -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:26 EDT" name="closeBrowser" finished-at="2021-10-14T23:32:28 EDT" duration-ms="2100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:28 EDT" name="openBrowser" finished-at="2021-10-14T23:32:32 EDT" duration-ms="3708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableNotGeneratedWithInputValueLessThanEqualToZero()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:32 EDT" name="verifyTableNotGeneratedWithInputValueLessThanEqualToZero" finished-at="2021-10-14T23:32:32 EDT" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableNotGeneratedWithInputValueLessThanEqualToZero -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:32 EDT" name="closeBrowser" finished-at="2021-10-14T23:32:34 EDT" duration-ms="2121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:34 EDT" name="openBrowser" finished-at="2021-10-14T23:32:38 EDT" duration-ms="4313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTableNotGeneratedWithNonNumericInputValue()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:38 EDT" name="verifyTableNotGeneratedWithNonNumericInputValue" finished-at="2021-10-14T23:32:39 EDT" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableNotGeneratedWithNonNumericInputValue -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:tests.TicTacToeTest@1a0dcaa]" started-at="2021-10-14T23:32:39 EDT" name="closeBrowser" finished-at="2021-10-14T23:32:41 EDT" duration-ms="2106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.TicTacToeTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
